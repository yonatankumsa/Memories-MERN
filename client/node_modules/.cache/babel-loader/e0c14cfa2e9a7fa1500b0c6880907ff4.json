{"ast":null,"code":"var _jsxFileName = \"D:\\\\Courses\\\\WebD Projects\\\\Coding Ninjas\\\\MERN Stack\\\\Memories-MERN-Project\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FileBase from \"react-file-base64\";\nimport useStyles from \"./styles\";\nimport { createPost, updatePost } from \"../../actions/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const [postData, setPostData] = useState({\n    creator: \"\",\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\"\n  }); //   const post = useSelector((state) =>\n  //     currentId ? state.posts.find((message) => message._id === currentId) : null\n  //   );\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!currentId) {\n      dispatch(createPost(postData));\n    } else {\n      dispatch(updatePost(currentId, postData));\n    }\n\n    clear();\n  };\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      creator: \"\",\n      title: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: currentId ? `Editing \"${post.title}\"` : \"Creating a Memory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        multiline: true,\n        minRows: 4,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags (coma separated)\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value.split(\",\")\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({ ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"6BcyyPXB6M35/vJPsSqeK1s/c58=\", false, function () {\n  return [useSelector, useDispatch, useStyles];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","useStyles","createPost","updatePost","Form","currentId","setCurrentId","post","state","posts","find","p","_id","postData","setPostData","creator","title","message","tags","selectedFile","dispatch","classes","handleSubmit","e","preventDefault","clear","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"sources":["D:/Courses/WebD Projects/Coding Ninjas/MERN Stack/Memories-MERN-Project/client/src/components/Form/Form.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FileBase from \"react-file-base64\";\r\n\r\nimport useStyles from \"./styles\";\r\nimport { createPost, updatePost } from \"../../actions/posts\";\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n  const post = useSelector((state) =>\r\n    currentId ? state.posts.find((p) => p._id === currentId) : null\r\n  );\r\n  const [postData, setPostData] = useState({\r\n    creator: \"\",\r\n    title: \"\",\r\n    message: \"\",\r\n    tags: \"\",\r\n    selectedFile: \"\",\r\n  });\r\n  //   const post = useSelector((state) =>\r\n  //     currentId ? state.posts.find((message) => message._id === currentId) : null\r\n  //   );\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (post) setPostData(post);\r\n  }, [post]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!currentId) {\r\n      dispatch(createPost(postData));\r\n    } else {\r\n      dispatch(updatePost(currentId, postData));\r\n    }\r\n    \r\n    clear();\r\n  };\r\n\r\n  const clear = () => {\r\n    setCurrentId(null);\r\n    setPostData({\r\n      creator: \"\",\r\n      title: \"\",\r\n      message: \"\",\r\n      tags: \"\",\r\n      selectedFile: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n        className={`${classes.root} ${classes.form}`}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Typography variant=\"h6\">\r\n          {currentId ? `Editing \"${post.title}\"` : \"Creating a Memory\"}\r\n        </Typography>\r\n        <TextField\r\n          name=\"creator\"\r\n          variant=\"outlined\"\r\n          label=\"Creator\"\r\n          fullWidth\r\n          value={postData.creator}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, creator: e.target.value })\r\n          }\r\n        />\r\n        <TextField\r\n          name=\"title\"\r\n          variant=\"outlined\"\r\n          label=\"Title\"\r\n          fullWidth\r\n          value={postData.title}\r\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\r\n        />\r\n        <TextField\r\n          name=\"message\"\r\n          variant=\"outlined\"\r\n          label=\"Message\"\r\n          fullWidth\r\n          multiline\r\n          minRows={4}\r\n          value={postData.message}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, message: e.target.value })\r\n          }\r\n        />\r\n        <TextField\r\n          name=\"tags\"\r\n          variant=\"outlined\"\r\n          label=\"Tags (coma separated)\"\r\n          fullWidth\r\n          value={postData.tags}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, tags: e.target.value.split(\",\") })\r\n          }\r\n        />\r\n        <div className={classes.fileInput}>\r\n          <FileBase\r\n            type=\"file\"\r\n            multiple={false}\r\n            onDone={({ base64 }) =>\r\n              setPostData({ ...postData, selectedFile: base64 })\r\n            }\r\n          />\r\n        </div>\r\n        <Button\r\n          className={classes.buttonSubmit}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          fullWidth\r\n        >\r\n          Submit\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          size=\"small\"\r\n          onClick={clear}\r\n          fullWidth\r\n        >\r\n          Clear\r\n        </Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}